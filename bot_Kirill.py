import telebot
from telebot import types

# –¢–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞
bot = telebot.TeleBot('6064467428:AAF8R7L7dLDJQ_3OqoJSxwWZYE_IeVmxfKQ')

# –ö–ù–û–ü–ö–ò –í –ë–û–¢–ï

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, 'Hi, friend')
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # btn1 = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    # btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    # btn3 = types.KeyboardButton("–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
    # markup.add(btn1, btn2, btn3)
    # bot.send_message(message.chat.id,
    #                  text= f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–µ–±—è, {message.from_user.first_name}!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def echo(message):
    bot.send_message(message.chat.id, message.text)

# @bot.message_handler(content_types=['text'])
# def func(message):
#     if (message.text == "–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
#         bot.send_message(message.chat.id, text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ —Ç–µ—Å—Ç–∏—Ä—É–µ—à—å –º–µ–Ω—è!")
#     if (message.text == "–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"):
#         bot.send_message(message.chat.id, text="–°–µ–π—á–∞—Å —ç—Ç–æ –∏ —É–∑–Ω–∞–µ—Ç–µ!")
#         # bot.register_next_step_handler(message, author_question)
#     elif (message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
#         btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
#         back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
#         markup.add(btn1, btn2, back)
#         bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
#
#     elif (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
#         bot.send_message(message.chat.id, "–ë–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!!!!")
#
#     elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
#         bot.send_message(message.chat.id, text="–Ø –ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –ù–æ –≤ –±—É–¥—É—â–µ–º, —è –Ω–∞—É—á—É—Å—å –¥–µ–ª–∞—Ç—å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ üöÄ")
#
#     elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         button1 = types.KeyboardButton("–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
#         button2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
#         button3 = types.KeyboardButton("–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
#         markup.add(button1, button2, button3)
#         bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)


# def author_question(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     markup.add(types.KeyboardButton('–î–∞'), types.KeyboardButton('–ù–µ—Ç'))
#     bot.send_message(message.chat.id, '–í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Å–æ–∑–¥–∞–ª –±–æ—Ç–∞?', reply_markup=markup)
#     bot.register_next_step_handler(message, author)
#
# def author(message):
#     if message.text == '–î–∞':
#         bot.reply_to(message, "–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –ö–∏—Ä–∏–ª–ª–æ–º, –õ–µ—Ä–æ–π, –ê–Ω—Ç–æ–Ω–æ–º –∏ –ò–ª—å–µ–π ")
#     elif message.text == '–ù–µ—Ç':
#         bot.reply_to(message, '–ù–µ —Ö–æ—á–µ—à—å - –∫–∞–∫ —Ö–æ—á–µ—à—å.')
#     else:
#         bot.register_next_step_handler(message, func)

#
#
if __name__ == "__main__":
    # –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞

    bot.polling(none_stop=True)

