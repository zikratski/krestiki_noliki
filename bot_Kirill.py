import telebot
from telebot import types
import configure
#
#
# # –¢–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞
bot = telebot.TeleBot(configure.token)

# –ö–ù–û–ü–ö–ò –í –ë–û–¢–ï

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    btn3 = types.KeyboardButton("–ê–≤—Ç–æ—Ä—ã")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–µ–±—è, –ö–∏—Ä–∏–ª–ª".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Å—Ç–∏–Ω–≥ –º–µ–Ω—è!)")
    if (message.text == "–ê–≤—Ç–æ—Ä—ã"):
        bot.register_next_step_handler(message, author_question)
    elif (message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    elif (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        bot.send_message(message.chat.id, "–ë–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!!!!")

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–ü–æ–∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏")

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)


@bot.message_handler(commands=['authors'])
def author_question(message):
    bot.send_message(message.chat.id, '–í—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å, –∫—Ç–æ —Å–æ–∑–¥–∞–ª –±–æ—Ç–∞?')
    bot.register_next_step_handler(message, author)

def author(message):
    if message.text == '–î–∞':
        bot.reply_to(message, 'Kirill, Lera, Anton, Ilya')
    elif message.text == '–ù–µ—Ç':
        bot.reply_to(message, '–ù–µ —Ö–æ—á–µ—à—å - –∫–∞–∫ —Ö–æ—á–µ—à—å.')
    else:
        bot.register_next_step_handler(message, author_question)



# @bot.message_handler(commands=['start'])
# def say_hello(message):
#     bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥, –¥–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!', reply_markup=keyboard_list)
#
# @bot.message_handler(commands=['end'])
# def say_bye(message):
#     bot.send_message(message.chat.id, '–ü—Ä–æ—â–∞–π, –¥—Ä—É–≥, –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã –≤–µ—Ä–Ω—ë—à—å—Å—è')



# # def echo(message):
#     bot.send_message(message.chat.id, text=f'{message.text}')
@bot.message_handler(content_types=['text'])
def send_text(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —á–∏—Å–ª–æ/—Ü–∏—Ñ—Ä—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ 2:')
    bot.register_next_step_handler(message, multiply)

def multiply(message):
    try:
        number = int(message.text)
        bot.send_message(message.chat.id, f'–í–∞—à–µ —á–∏—Å–ª–æ/—Ü–∏—Ñ—Ä–∞, —É–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 2: {number*2}')
        send_text(message)
    except ValueError:
        bot.send_message(message.chat.id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')

        send_text(message)

#
#
if __name__ == "__main__":
    # –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞

    bot.infinity_polling()

