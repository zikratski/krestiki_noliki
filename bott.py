import numpy as np
import telebot

import algo, algo2
import play
import graphic
from telebot import types

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞ —Ä–µ–∂–∏–º –∏–≥—Ä—ã, –µ—ë —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è
# –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ None, —Ç.–∫. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª
mode = None
difficult = None
field = None
symbol_person = None
symbol_ai = None
graphics_mode = "standart"
dict_commands = {'1': (0, 0), '2': (0, 1), '3': (0, 2), '4': (1, 0), '5': (1, 1), '6': (1, 2), '7': (2, 0), '8': (2, 1), '9': (2, 2)}
matr = np.array(list())
flag = True
flag2 = True


# –¢–æ–∫–µ–Ω–∞ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞
bot = telebot.TeleBot('6064467428:AAF8R7L7dLDJQ_3OqoJSxwWZYE_IeVmxfKQ')
# –ö–ù–û–ü–ö–ò –í –ë–û–¢–ï

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É")
    btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    btn3 = types.KeyboardButton("–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id,
                     text= f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–µ–±—è, {message.from_user.first_name}!", reply_markup=markup)
    #photo = open('C:/Users/Kirill/Desktop/XsOs.jpg', 'rb')
    #bot.send_photo(message.chat.id, photo)

@bot.message_handler(content_types=['text'])
def choose_func(message):
    if (message.text == "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        #–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é mode
        bot_mode = types.KeyboardButton("c –±–æ—Ç–æ–º")
        people_mode = types.KeyboardButton("c –¥—Ä—É–≥–æ–º(–æ–¥–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(bot_mode, people_mode, back)
        msg = bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã: ', reply_markup=markup)
        bot.register_next_step_handler(msg, choose_gamemode)

    elif (message.text == "–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞" or message.text == "/authors"):
        bot.send_message(message.chat.id, text="–≠—Ç–æ—Ç –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –ö–∏—Ä–∏–ª–ª–æ–º, –õ–µ—Ä–æ–π, –ê–Ω—Ç–æ–Ω–æ–º –∏ –ò–ª—å–µ–π ")

    elif (message.text == "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å" or message.text == "/question"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        msg = bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
        bot.register_next_step_handler(msg, choose_question)

def return_menu(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É")
        btn2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        btn3 = types.KeyboardButton("–ê–≤—Ç–æ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞")
        markup.add(btn1, btn2, btn3)
        msg = bot.send_message(message.chat.id, text= f"–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–µ–±—è, {message.from_user.first_name}!", reply_markup=markup)
        bot.register_next_step_handler(msg, choose_func)

def choose_question(message):

    if (message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        msg = bot.send_message(message.chat.id, "–ë–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏!!!!")
        bot.register_next_step_handler(msg, choose_question)

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        msg = bot.send_message(message.chat.id, text="–Ø –ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π üöÄ")
        bot.register_next_step_handler(msg, choose_question)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        return_menu(message)

def choose_gamemode(message):
    global mode
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª '—Å –±–æ—Ç–æ–º', —Ç–æ –¥–∞–ª–µ–µ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä—ã(–ª—ë–≥–∫–∏–π, –∞–Ω—Ä–∏–∞–ª)
    # –î–æ—Å—Ç—É–ø–µ–Ω –≤—ã–±–æ—Ä –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –≤—ã–±–æ—Ä—É –∏ –∫ –≤—ã—Ö–æ–¥—É –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if message.text == "c –±–æ—Ç–æ–º":
        mode = "c –±–æ—Ç–æ–º"
        bot.send_message(message.chat.id, "–í—ã –±—É–¥–µ—Ç–µ –∏–≥—Ä–∞—Ç—å <i>—Å –±–æ—Ç–æ–º</i>", parse_mode='HTML')
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        b1 = types.KeyboardButton("–õ—ë–≥–∫–∏–π")
        b2 = types.KeyboardButton("–ê–Ω—Ä–∏–∞–ª(–±–æ—Ç —É–Ω–∏–∂–∞–µ—Ç)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        kb.add(b1, b2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –±–æ—Ç–∞: ", reply_markup=kb)
        bot.register_next_step_handler(msg, choose_difficulty)

    elif message.text == "c –¥—Ä—É–≥–æ–º(–æ–¥–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)":
        mode = "c –¥—Ä—É–≥–æ–º"
        msg = bot.send_message(message.chat.id, "–í—ã –±—É–¥–µ—Ç–µ –∏–≥—Ä–∞—Ç—å <i>—Å –¥—Ä—É–≥–æ–º</i>", parse_mode='HTML')
        bot.register_next_step_handler(msg, choose_field)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        return_menu(message)

def choose_difficulty(message):
    global difficult

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–µ–∂–∏–º –õ—ë–≥–∫–∏–π
    if (message.text == "–õ—ë–≥–∫–∏–π"):
        difficult = "easy"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        button1 = types.KeyboardButton("3x3")
        button2 = types.KeyboardButton("–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        keyboard.add(button1, button2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è: ", reply_markup=keyboard)
        bot.register_next_step_handler(msg, choose_field)

    elif (message.text == "–ê–Ω—Ä–∏–∞–ª(–±–æ—Ç —É–Ω–∏–∂–∞–µ—Ç)"):
        difficult = "extreme"
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        button1 = types.KeyboardButton("3x3")
        button2 = types.KeyboardButton("–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        keyboard.add(button1, button2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è: ", reply_markup=keyboard)
        bot.register_next_step_handler(msg, choose_field)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        return_menu(message)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        bot_mode = types.KeyboardButton("c –±–æ—Ç–æ–º")
        people_mode = types.KeyboardButton("c –¥—Ä—É–≥–æ–º(–æ–¥–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ)")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(bot_mode, people_mode, back_to_menu)
        msg = bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã: ', reply_markup=markup)
        bot.register_next_step_handler(msg, choose_gamemode)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª 3x3
def choose_field(message):
    if (message.text == "3x3"):
        global field
        global matr
        field = "3x3"
        matr = np.zeros_like(np.eye(int(field[0])))
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("–ö—Ä–µ—Å—Ç–∏–∫–∏")
        btn2 = types.KeyboardButton("–ù–æ–ª–∏–∫–∏")
        btn3 = types.KeyboardButton("–î–∞–º–±–ª–¥–æ—Ä")
        btn4 = types.KeyboardButton("–°–µ–≤–µ—Ä—É—Å –°–Ω–µ–≥–≥")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–æ–ª—è")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        keyboard.add(btn1, btn2, btn3, btn4, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å: ", reply_markup=keyboard)
        bot.register_next_step_handler(msg, choose_figure)

    elif (message.text == "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)"):
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        button1 = types.KeyboardButton("3x3")
        button2 = types.KeyboardButton("–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        keyboard.add(button1, button2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–£—Å–ª—É–≥–∞ —Å—Ç–æ–∏—Ç 2,49$ ", reply_markup=keyboard)
        bot.register_next_step_handler(msg, choose_field)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"):
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        b1 = types.KeyboardButton("–õ—ë–≥–∫–∏–π")
        b2 = types.KeyboardButton("–ê–Ω—Ä–∏–∞–ª(–±–æ—Ç —É–Ω–∏–∂–∞–µ—Ç)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        kb.add(b1, b2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –±–æ—Ç–∞: ", reply_markup=kb)
        bot.register_next_step_handler(msg, choose_difficulty)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        return_menu(message)


# –í—ã–±–æ—Ä —Ñ–∏–≥—É—Ä—ã, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –ò–ò
def choose_figure(message):
    global symbol_person
    global symbol_ai
    global graphics_mode
    global btns
    global flag

    if (message.text == "–ö—Ä–µ—Å—Ç–∏–∫–∏"):
        symbol_person = 1
        symbol_ai = 2
        bot.send_message(message.chat.id, text="–í—ã - –ö—Ä–µ—Å—Ç–∏–∫–∏\n–ë–æ—Ç - –ù–æ–ª–∏–∫–∏")

    elif (message.text == "–ù–æ–ª–∏–∫–∏"):
        symbol_person = 2
        symbol_ai = 1
        bot.send_message(message.chat.id, text="–í—ã - –ù–æ–ª–∏–∫–∏\n–ë–æ—Ç - –ö—Ä–µ—Å—Ç–∏–∫–∏")

    elif (message.text == "–î–∞–º–±–ª–¥–æ—Ä"):
        symbol_person = 1
        symbol_ai = 2
        graphics_mode = "HP"
        bot.send_message(message.chat.id, text="–í—ã - –î–∞–º–±–ª–¥–æ—Ä\n–ë–æ—Ç - –°–µ–≤–µ—Ä—É—Å –°–Ω–µ–≥–≥")

    elif (message.text) == "–°–µ–≤–µ—Ä—É—Å –°–Ω–µ–≥–≥":
        symbol_person = 2
        symbol_ai = 1
        graphics_mode = "HP"
        bot.send_message(message.chat.id, text="–í—ã - –°–µ–≤–µ—Ä—É—Å –°–Ω–µ–≥–≥\n–ë–æ—Ç - –î–∞–º–±–ª–¥–æ—Ä")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–æ–ª—è":
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        button1 = types.KeyboardButton("3x3")
        button2 = types.KeyboardButton("–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ(–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–ª–æ–∂–Ω–æ—Å—Ç–∏")
        back_to_menu = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        keyboard.add(button1, button2, back, back_to_menu)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è: ", reply_markup=keyboard)
        bot.register_next_step_handler(msg, choose_field)

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        return_menu(message)

    flag = True
    while True:
        if flag == True:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            btns = [types.KeyboardButton("1"), types.KeyboardButton("2"), types.KeyboardButton("3"),
                    types.KeyboardButton("4"), types.KeyboardButton("5"), types.KeyboardButton("6"),
                    types.KeyboardButton("7"), types.KeyboardButton("8"), types.KeyboardButton("9")]
            markup.add(*btns)
            msg = bot.send_message(message.chat.id, '–í–∞—à —Ö–æ–¥: ', reply_markup=markup)
            flag = False
            bot.register_next_step_handler(msg, start_game_person)

    #–ó–î–ï–°–¨ –î–û–õ–ñ–ï–ù –ë–´–¢–¨ –í–´–•–û–î –í –ú–ï–ù–Æ




def start_game_person(message):
    global matr
    global symbol_ai, symbol_person
    global dict_commands
    global difficult
    global flag, flag2
    state = matr[:]

    command = dict_commands[message.text]
    i = int(command[0])
    j = int(command[1])
    state[i][j] = symbol_person
    # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–ú–ï–°–¢–û –°–õ–ï–î –°–¢–†–û–ö–ò –ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
    bot.send_message(message.chat.id, f"{str(state)}")

    if algo.check_lose(state, pers=symbol_person):
        msg = bot.send_message(message.chat.id, 'you have won')
        # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
        flag2 = False

    elif algo.check_tie(state, ai=symbol_ai, pers=symbol_person):
        bot.send_message(message.chat.id, 'tie')
        # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
        flag2 = False

    if flag2:
        bot.send_message(message.chat.id, '—Ö–æ–¥ –±–æ—Ç–∞: ')
        start_game_ai(difficult,symbol_person,symbol_ai)
        # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–ú–ï–°–¢–û –°–õ–ï–î –°–¢–†–û–ö–ò –ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
        bot.send_message(message.chat.id, f"{str(state)}")
        if algo.check_win(state, ai=symbol_ai):
            # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
            bot.send_message(message.chat.id, 'ai has won')
            flag2 = False
        elif algo.check_tie(state, ai=symbol_ai, pers=symbol_person):
            bot.send_message(message.chat.id, 'tie')
            # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
            flag2 = False
        # –ó–ê–ü–£–°–ö –õ–ï–†–ò–ù–û–ô –§–£–ù–ö–¶–ò–ò –í–´–í–û–î –í –ß–ê–¢ –¢–ï–ö–£–©–ï–ô –°–ò–¢–£–ê–¶–ò–ò
    if flag2:
        flag = True


def start_game_ai(mode,symbol_person,symbol_ai):
    global matr
    state = matr[:]
    ij = algo2.best_move(state, mode=mode, pers=symbol_person, ai=symbol_ai)
    state[ij[0]][ij[1]] = symbol_ai

def check_game_situation(state,symbol_person,symbol_ai):
    ...
def show_and_replace_btn(message):
    global dict_commands
    if (message.text == button for button in dict_commands.keys()):
        btns[int(message.text) - 1] = types.KeyboardButton(" ")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*btns)
        msg = bot.send_message(message.chat.id, f'–í—ã –ø–æ—Ö–æ–¥–∏–ª–∏ –Ω–∞ –∫–ª–µ—Ç–∫—É –Ω–æ–º–µ—Ä {message.text}', reply_markup=markup)
        #bot.register_next_step_handler(msg, start_game)
if __name__ == "__main__":
    # –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞

    bot.infinity_polling()


